#!/bin/sh

#
# chkconfig: 234 90 10
# description: Event Reactor
#

[ -f "/etc/rc.d/init.d/functions" ] && . /etc/rc.d/init.d/functions

NAME="event-reactor"

ROUTER_NAME="event-router"
SUBSCRIBER_NAME="event-sub"

ROUTER="/usr/local/bin/${ROUTER_NAME}.py"
SUBSCRIBER="/usr/local/bin/${SUBSCRIBER_NAME}.py"

LOGDIR="/var/log/${NAME}"

PGREP="/usr/bin/pgrep -f"

check_logdir() {
	[ -e "${LOGDIR}" ] || mkdir "${LOGDIR}"
}

router_status() {
	R_PIDS=`${PGREP} "${ROUTER}" | xargs`
	if [ "$R_PIDS" == "" ]; then
		echo "${ROUTER_NAME} not running!"
	else
		echo "${ROUTER_NAME} running... [${R_PIDS}]"
	fi
}
subscriber_status() {
	S_PIDS=`${PGREP} "${SUBSCRIBER}" | xargs`
	if [ "$S_PIDS" == "" ]; then
		echo "${SUBSCRIBER_NAME} not running!"
	else
		echo "${SUBSCRIBER_NAME} running... [${S_PIDS}]"
	fi
}
status() {
	subscriber_status;
	router_status;
}

start_subscriber() {
	${SUBSCRIBER} >> ${LOGIDR}/${SUBSCRIBER_NAME}.log 2>&1 &
	sleep 2;
	subscriber_status;

}
start_router() {
	${ROUTER} >> ${LOGDIR}/${ROUTER_NAME}.log 2>&1 &
	sleep 2;
	router_status;
}
start() {
	check_logdir;
	start_subscriber;
	start_router;
}

stop_router() {
	R_PIDS=`${PGREP} "${ROUTER}" | sort -r`
	for pid in $R_PIDS; do
		kill $pid;
	done
}
stop_subscriber() {
	S_PIDS=`${PGREP} "${SUBSCRIBER}" | sort -r`
	for pid in $S_PIDS; do
		kill $pid;
	done
}
stop() {
	stop_router;
	stop_subscriber;
}

case "$1" in
	start)
		start;
		;;
	stop)
		stop;
		;;
	status)
		status;
		;;
	restart)
		stop;
		sleep 2;
		start;
		;;
	*)
		echo "$0 [start|stop|restart|status]"
		exit 1;
esac
exit 0
